export interface ActionDescriptorOptions {
    identifier?: string;
    eventName?: string;
    methodName?: string;
    eventTarget?: EventTarget;
}
export declare class ActionDescriptor {
    private static defaultEventNames;
    identifier: string;
    eventName: string;
    methodName: string;
    eventTarget: EventTarget;
    static forOptions(options: ActionDescriptorOptions): ActionDescriptor;
    static forElementWithInlineDescriptorString(element: Element, descriptorString: string): ActionDescriptor;
    private static parseOptionsFromInlineActionDescriptorString(descriptorString);
    private static getDefaultEventNameForElement(element);
    constructor(identifier: string, eventName: string, methodName: string, eventTarget: EventTarget);
    readonly eventTargetName: string | undefined;
    isEqualTo(descriptor: ActionDescriptor | null): boolean;
    toString(): string;
}
